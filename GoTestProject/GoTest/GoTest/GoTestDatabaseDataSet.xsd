<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GoTestDatabaseDataSet" targetNamespace="http://tempuri.org/GoTestDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/GoTestDatabaseDataSet.xsd" xmlns="http://tempuri.org/GoTestDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="GoTestDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="GoTestDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.GoTest.Properties.Settings.GlobalReference.Default.GoTestDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CourseTableAdapter" GeneratorDataComponentClassName="CourseTableAdapter" Name="Course" UserDataComponentName="CourseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.Course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Course] WHERE (([CourseId] = @Original_CourseId) AND ([TeacherId] = @Original_TeacherId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Course] ([CourseId], [TeacherId]) VALUES (@CourseId, @TeacherId);
SELECT CourseId, TeacherId FROM Course WHERE (CourseId = @CourseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CourseId, TeacherId FROM dbo.Course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Course] SET [CourseId] = @CourseId, [TeacherId] = @TeacherId WHERE (([CourseId] = @Original_CourseId) AND ([TeacherId] = @Original_TeacherId));
SELECT CourseId, TeacherId FROM Course WHERE (CourseId = @CourseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MultipleChoiceTableAdapter" GeneratorDataComponentClassName="MultipleChoiceTableAdapter" Name="MultipleChoice" UserDataComponentName="MultipleChoiceTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.MultipleChoice" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MultipleChoice] ([Question], [Choice1], [Choice2], [Choice3], [Choice4], [Answer], [QuizId]) VALUES (@Question, @Choice1, @Choice2, @Choice3, @Choice4, @Answer, @QuizId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Question" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Question" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Choice1" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Choice1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Choice2" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Choice2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Choice3" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Choice3" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Choice4" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Choice4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Answer" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Answer" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@QuizId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuizId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Question, Choice1, Choice2, Choice3, Choice4, Answer, QuizId FROM dbo.MultipleChoice</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Question" DataSetColumn="Question" />
              <Mapping SourceColumn="Choice1" DataSetColumn="Choice1" />
              <Mapping SourceColumn="Choice2" DataSetColumn="Choice2" />
              <Mapping SourceColumn="Choice3" DataSetColumn="Choice3" />
              <Mapping SourceColumn="Choice4" DataSetColumn="Choice4" />
              <Mapping SourceColumn="Answer" DataSetColumn="Answer" />
              <Mapping SourceColumn="QuizId" DataSetColumn="QuizId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="QuizTableAdapter" GeneratorDataComponentClassName="QuizTableAdapter" Name="Quiz" UserDataComponentName="QuizTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.Quiz" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Quiz] WHERE (([QuizId] = @Original_QuizId) AND ([Title] = @Original_Title) AND ([CourseId] = @Original_CourseId) AND ([TeacherId] = @Original_TeacherId) AND ([NumberOfQuestions] = @Original_NumberOfQuestions))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuizId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuizId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Quiz] ([Title], [CourseId], [TeacherId], [NumberOfQuestions]) VALUES (@Title, @CourseId, @TeacherId, @NumberOfQuestions);
SELECT QuizId, Title, CourseId, TeacherId, NumberOfQuestions FROM Quiz WHERE (QuizId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfQuestions" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT QuizId, Title, CourseId, TeacherId, NumberOfQuestions FROM dbo.Quiz</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Quiz] SET [Title] = @Title, [CourseId] = @CourseId, [TeacherId] = @TeacherId, [NumberOfQuestions] = @NumberOfQuestions WHERE (([QuizId] = @Original_QuizId) AND ([Title] = @Original_Title) AND ([CourseId] = @Original_CourseId) AND ([TeacherId] = @Original_TeacherId) AND ([NumberOfQuestions] = @Original_NumberOfQuestions));
SELECT QuizId, Title, CourseId, TeacherId, NumberOfQuestions FROM Quiz WHERE (QuizId = @QuizId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@NumberOfQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfQuestions" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_QuizId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="QuizId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Title" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_NumberOfQuestions" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="NumberOfQuestions" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="QuizId" ColumnName="QuizId" DataSourceName="[C:\USERS\ALAGO\SOURCE\REPOS\GOTEST\GOTEST\GOTESTDATABASE.MDF].dbo.Quiz" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@QuizId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="QuizId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="QuizId" DataSetColumn="QuizId" />
              <Mapping SourceColumn="Title" DataSetColumn="Title" />
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
              <Mapping SourceColumn="NumberOfQuestions" DataSetColumn="NumberOfQuestions" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([StudentId] = @Original_StudentId) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LastName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([FirstName], [LastName], [Password]) VALUES (@FirstName, @LastName, @Password);
SELECT StudentId, FirstName, LastName, Password FROM Student WHERE (StudentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentId, FirstName, LastName, Password FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [FirstName] = @FirstName, [LastName] = @LastName, [Password] = @Password WHERE (([StudentId] = @Original_StudentId) AND ([FirstName] = @Original_FirstName) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)));
SELECT StudentId, FirstName, LastName, Password FROM Student WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_LastName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Password" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="[C:\USERS\ALAGO\SOURCE\REPOS\GOTEST\GOTEST\GOTESTDATABASE.MDF].dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentListTableAdapter" GeneratorDataComponentClassName="StudentListTableAdapter" Name="StudentList" UserDataComponentName="StudentListTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.StudentList" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StudentList] ([FirstName], [LastName], [StudentId], [CourseId]) VALUES (@FirstName, @LastName, @StudentId, @CourseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@CourseId" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="CourseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FirstName, LastName, StudentId, CourseId FROM dbo.StudentList</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="CourseId" DataSetColumn="CourseId" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([TeacherId] = @Original_TeacherId) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([TeacherUserName] = @Original_TeacherUserName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([FirstName], [LastName], [TeacherUserName]) VALUES (@FirstName, @LastName, @TeacherUserName);
SELECT TeacherId, FirstName, LastName, TeacherUserName FROM Teacher WHERE (TeacherId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherId, FirstName, LastName, TeacherUserName FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [FirstName] = @FirstName, [LastName] = @LastName, [TeacherUserName] = @TeacherUserName WHERE (([TeacherId] = @Original_TeacherId) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName) AND ([TeacherUserName] = @Original_TeacherUserName));
SELECT TeacherId, FirstName, LastName, TeacherUserName FROM Teacher WHERE (TeacherId = @TeacherId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TeacherId" ColumnName="TeacherId" DataSourceName="[C:\USERS\ALAGO\SOURCE\REPOS\GOTEST\GOTEST\GOTESTDATABASE.MDF].dbo.Teacher" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TeacherId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TeacherId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherId" DataSetColumn="TeacherId" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="TeacherUserName" DataSetColumn="TeacherUserName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TLogInfoTableAdapter" GeneratorDataComponentClassName="TLogInfoTableAdapter" Name="TLogInfo" UserDataComponentName="TLogInfoTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="GoTestDatabaseConnectionString (Settings)" DbObjectName="dbo.TLogInfo" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TLogInfo] WHERE (([TeacherUserName] = @Original_TeacherUserName) AND ([TeacherPassWord] = @Original_TeacherPassWord))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherPassWord" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherPassWord" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TLogInfo] ([TeacherUserName], [TeacherPassWord]) VALUES (@TeacherUserName, @TeacherPassWord);
SELECT TeacherUserName, TeacherPassWord FROM TLogInfo WHERE (TeacherUserName = @TeacherUserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherPassWord" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherPassWord" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TeacherUserName, TeacherPassWord FROM dbo.TLogInfo</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TLogInfo] SET [TeacherUserName] = @TeacherUserName, [TeacherPassWord] = @TeacherPassWord WHERE (([TeacherUserName] = @Original_TeacherUserName) AND ([TeacherPassWord] = @Original_TeacherPassWord));
SELECT TeacherUserName, TeacherPassWord FROM TLogInfo WHERE (TeacherUserName = @TeacherUserName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TeacherPassWord" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherPassWord" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherUserName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherUserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TeacherPassWord" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TeacherPassWord" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TeacherUserName" DataSetColumn="TeacherUserName" />
              <Mapping SourceColumn="TeacherPassWord" DataSetColumn="TeacherPassWord" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GoTestDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="GoTestDatabaseDataSet" msprop:Generator_DataSetName="GoTestDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Course" msprop:Generator_RowEvHandlerName="CourseRowChangeEventHandler" msprop:Generator_RowDeletedName="CourseRowDeleted" msprop:Generator_RowDeletingName="CourseRowDeleting" msprop:Generator_RowEvArgName="CourseRowChangeEvent" msprop:Generator_TablePropName="Course" msprop:Generator_RowChangedName="CourseRowChanged" msprop:Generator_RowChangingName="CourseRowChanging" msprop:Generator_TableClassName="CourseDataTable" msprop:Generator_RowClassName="CourseRow" msprop:Generator_TableVarName="tableCourse" msprop:Generator_UserTableName="Course">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_UserColumnName="CourseId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_UserColumnName="TeacherId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MultipleChoice" msprop:Generator_RowEvHandlerName="MultipleChoiceRowChangeEventHandler" msprop:Generator_RowDeletedName="MultipleChoiceRowDeleted" msprop:Generator_RowDeletingName="MultipleChoiceRowDeleting" msprop:Generator_RowEvArgName="MultipleChoiceRowChangeEvent" msprop:Generator_TablePropName="MultipleChoice" msprop:Generator_RowChangedName="MultipleChoiceRowChanged" msprop:Generator_RowChangingName="MultipleChoiceRowChanging" msprop:Generator_TableClassName="MultipleChoiceDataTable" msprop:Generator_RowClassName="MultipleChoiceRow" msprop:Generator_TableVarName="tableMultipleChoice" msprop:Generator_UserTableName="MultipleChoice">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Question" msprop:Generator_ColumnPropNameInRow="Question" msprop:Generator_ColumnPropNameInTable="QuestionColumn" msprop:Generator_ColumnVarNameInTable="columnQuestion" msprop:Generator_UserColumnName="Question">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Choice1" msprop:Generator_ColumnPropNameInRow="Choice1" msprop:Generator_ColumnPropNameInTable="Choice1Column" msprop:Generator_ColumnVarNameInTable="columnChoice1" msprop:Generator_UserColumnName="Choice1">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Choice2" msprop:Generator_ColumnPropNameInRow="Choice2" msprop:Generator_ColumnPropNameInTable="Choice2Column" msprop:Generator_ColumnVarNameInTable="columnChoice2" msprop:Generator_UserColumnName="Choice2">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Choice3" msprop:Generator_ColumnPropNameInRow="Choice3" msprop:Generator_ColumnPropNameInTable="Choice3Column" msprop:Generator_ColumnVarNameInTable="columnChoice3" msprop:Generator_UserColumnName="Choice3" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Choice4" msprop:Generator_ColumnPropNameInRow="Choice4" msprop:Generator_ColumnPropNameInTable="Choice4Column" msprop:Generator_ColumnVarNameInTable="columnChoice4" msprop:Generator_UserColumnName="Choice4" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Answer" msprop:Generator_ColumnPropNameInRow="Answer" msprop:Generator_ColumnPropNameInTable="AnswerColumn" msprop:Generator_ColumnVarNameInTable="columnAnswer" msprop:Generator_UserColumnName="Answer">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="QuizId" msprop:Generator_ColumnPropNameInRow="QuizId" msprop:Generator_ColumnPropNameInTable="QuizIdColumn" msprop:Generator_ColumnVarNameInTable="columnQuizId" msprop:Generator_UserColumnName="QuizId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Quiz" msprop:Generator_RowEvHandlerName="QuizRowChangeEventHandler" msprop:Generator_RowDeletedName="QuizRowDeleted" msprop:Generator_RowDeletingName="QuizRowDeleting" msprop:Generator_RowEvArgName="QuizRowChangeEvent" msprop:Generator_TablePropName="Quiz" msprop:Generator_RowChangedName="QuizRowChanged" msprop:Generator_RowChangingName="QuizRowChanging" msprop:Generator_TableClassName="QuizDataTable" msprop:Generator_RowClassName="QuizRow" msprop:Generator_TableVarName="tableQuiz" msprop:Generator_UserTableName="Quiz">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="QuizId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="QuizId" msprop:Generator_ColumnPropNameInTable="QuizIdColumn" msprop:Generator_ColumnVarNameInTable="columnQuizId" msprop:Generator_UserColumnName="QuizId" type="xs:int" />
              <xs:element name="Title" msprop:Generator_ColumnPropNameInRow="Title" msprop:Generator_ColumnPropNameInTable="TitleColumn" msprop:Generator_ColumnVarNameInTable="columnTitle" msprop:Generator_UserColumnName="Title">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_UserColumnName="CourseId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherId" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_UserColumnName="TeacherId" type="xs:int" />
              <xs:element name="NumberOfQuestions" msprop:Generator_ColumnPropNameInRow="NumberOfQuestions" msprop:Generator_ColumnPropNameInTable="NumberOfQuestionsColumn" msprop:Generator_ColumnVarNameInTable="columnNumberOfQuestions" msprop:Generator_UserColumnName="NumberOfQuestions" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_RowClassName="StudentRow" msprop:Generator_TableVarName="tableStudent" msprop:Generator_UserTableName="Student">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StudentList" msprop:Generator_RowEvHandlerName="StudentListRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentListRowDeleted" msprop:Generator_RowDeletingName="StudentListRowDeleting" msprop:Generator_RowEvArgName="StudentListRowChangeEvent" msprop:Generator_TablePropName="StudentList" msprop:Generator_RowChangedName="StudentListRowChanged" msprop:Generator_RowChangingName="StudentListRowChanging" msprop:Generator_TableClassName="StudentListDataTable" msprop:Generator_RowClassName="StudentListRow" msprop:Generator_TableVarName="tableStudentList" msprop:Generator_UserTableName="StudentList">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="CourseId" msprop:Generator_ColumnPropNameInRow="CourseId" msprop:Generator_ColumnPropNameInTable="CourseIdColumn" msprop:Generator_ColumnVarNameInTable="columnCourseId" msprop:Generator_UserColumnName="CourseId">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teacher" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowEvArgName="TeacherRowChangeEvent" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_RowClassName="TeacherRow" msprop:Generator_TableVarName="tableTeacher" msprop:Generator_UserTableName="Teacher">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="TeacherId" msprop:Generator_ColumnPropNameInTable="TeacherIdColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherId" msprop:Generator_UserColumnName="TeacherId" type="xs:int" />
              <xs:element name="FirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherUserName" msprop:Generator_ColumnPropNameInRow="TeacherUserName" msprop:Generator_ColumnPropNameInTable="TeacherUserNameColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherUserName" msprop:Generator_UserColumnName="TeacherUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TLogInfo" msprop:Generator_RowEvHandlerName="TLogInfoRowChangeEventHandler" msprop:Generator_RowDeletedName="TLogInfoRowDeleted" msprop:Generator_RowDeletingName="TLogInfoRowDeleting" msprop:Generator_RowEvArgName="TLogInfoRowChangeEvent" msprop:Generator_TablePropName="TLogInfo" msprop:Generator_RowChangedName="TLogInfoRowChanged" msprop:Generator_RowChangingName="TLogInfoRowChanging" msprop:Generator_TableClassName="TLogInfoDataTable" msprop:Generator_RowClassName="TLogInfoRow" msprop:Generator_TableVarName="tableTLogInfo" msprop:Generator_UserTableName="TLogInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TeacherUserName" msprop:Generator_ColumnPropNameInRow="TeacherUserName" msprop:Generator_ColumnPropNameInTable="TeacherUserNameColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherUserName" msprop:Generator_UserColumnName="TeacherUserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TeacherPassWord" msprop:Generator_ColumnPropNameInRow="TeacherPassWord" msprop:Generator_ColumnPropNameInTable="TeacherPassWordColumn" msprop:Generator_ColumnVarNameInTable="columnTeacherPassWord" msprop:Generator_UserColumnName="TeacherPassWord">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Course" />
      <xs:field xpath="mstns:CourseId" />
    </xs:unique>
    <xs:unique name="Quiz_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Quiz" />
      <xs:field xpath="mstns:QuizId" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
    <xs:unique name="Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:TeacherId" />
    </xs:unique>
    <xs:unique name="TLogInfo_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TLogInfo" />
      <xs:field xpath="mstns:TeacherUserName" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_TeacherId" msdata:parent="Teacher" msdata:child="Course" msdata:parentkey="TeacherId" msdata:childkey="TeacherId" msprop:Generator_UserParentTable="Teacher" msprop:Generator_UserChildTable="Course" msprop:Generator_RelationVarName="relationFK_TeacherId" msprop:Generator_UserRelationName="FK_TeacherId" msprop:Generator_ChildPropName="GetCourseRows" msprop:Generator_ParentPropName="TeacherRow" />
      <msdata:Relationship name="FK_QuizId" msdata:parent="Quiz" msdata:child="MultipleChoice" msdata:parentkey="QuizId" msdata:childkey="QuizId" msprop:Generator_UserParentTable="Quiz" msprop:Generator_UserChildTable="MultipleChoice" msprop:Generator_RelationVarName="relationFK_QuizId" msprop:Generator_UserRelationName="FK_QuizId" msprop:Generator_ChildPropName="GetMultipleChoiceRows" msprop:Generator_ParentPropName="QuizRow" />
      <msdata:Relationship name="Fk_CourseId" msdata:parent="Course" msdata:child="Quiz" msdata:parentkey="CourseId" msdata:childkey="CourseId" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="Quiz" msprop:Generator_RelationVarName="relationFk_CourseId" msprop:Generator_ChildPropName="GetQuizRows" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_UserRelationName="Fk_CourseId" />
      <msdata:Relationship name="Fk_Teacher" msdata:parent="Teacher" msdata:child="Quiz" msdata:parentkey="TeacherId" msdata:childkey="TeacherId" msprop:Generator_UserParentTable="Teacher" msprop:Generator_UserChildTable="Quiz" msprop:Generator_RelationVarName="relationFk_Teacher" msprop:Generator_UserRelationName="Fk_Teacher" msprop:Generator_ChildPropName="GetQuizRows" msprop:Generator_ParentPropName="TeacherRow" />
      <msdata:Relationship name="Fk_CourseId_List" msdata:parent="Course" msdata:child="StudentList" msdata:parentkey="CourseId" msdata:childkey="CourseId" msprop:Generator_UserParentTable="Course" msprop:Generator_UserChildTable="StudentList" msprop:Generator_RelationVarName="relationFk_CourseId_List" msprop:Generator_ChildPropName="GetStudentListRows" msprop:Generator_ParentPropName="CourseRow" msprop:Generator_UserRelationName="Fk_CourseId_List" />
      <msdata:Relationship name="FK_StudentId_List" msdata:parent="Student" msdata:child="StudentList" msdata:parentkey="StudentId" msdata:childkey="StudentId" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="StudentList" msprop:Generator_RelationVarName="relationFK_StudentId_List" msprop:Generator_ChildPropName="GetStudentListRows" msprop:Generator_ParentPropName="StudentRow" msprop:Generator_UserRelationName="FK_StudentId_List" />
      <msdata:Relationship name="FK_TeacherUserName" msdata:parent="TLogInfo" msdata:child="Teacher" msdata:parentkey="TeacherUserName" msdata:childkey="TeacherUserName" msprop:Generator_UserParentTable="TLogInfo" msprop:Generator_UserChildTable="Teacher" msprop:Generator_RelationVarName="relationFK_TeacherUserName" msprop:Generator_UserRelationName="FK_TeacherUserName" msprop:Generator_ChildPropName="GetTeacherRows" msprop:Generator_ParentPropName="TLogInfoRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>